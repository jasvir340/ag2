"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[98337],{98577:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var s=r(74848),i=r(28453);const t={sidebar_label:"neo4j_graph_query_engine",title:"agentchat.contrib.graph_rag.neo4j_graph_query_engine"},a=void 0,o={id:"reference/agentchat/contrib/graph_rag/neo4j_graph_query_engine",title:"agentchat.contrib.graph_rag.neo4j_graph_query_engine",description:"Neo4jGraphQueryEngine",source:"@site/docs/reference/agentchat/contrib/graph_rag/neo4j_graph_query_engine.md",sourceDirName:"reference/agentchat/contrib/graph_rag",slug:"/reference/agentchat/contrib/graph_rag/neo4j_graph_query_engine",permalink:"/ag2/docs/reference/agentchat/contrib/graph_rag/neo4j_graph_query_engine",draft:!1,unlisted:!1,editUrl:"https://github.com/ag2ai/ag2/edit/main/website/docs/reference/agentchat/contrib/graph_rag/neo4j_graph_query_engine.md",tags:[],version:"current",frontMatter:{sidebar_label:"neo4j_graph_query_engine",title:"agentchat.contrib.graph_rag.neo4j_graph_query_engine"},sidebar:"referenceSideBar",previous:{title:"graph_rag_capability",permalink:"/ag2/docs/reference/agentchat/contrib/graph_rag/graph_rag_capability"},next:{title:"neo4j_graph_rag_capability",permalink:"/ag2/docs/reference/agentchat/contrib/graph_rag/neo4j_graph_rag_capability"}},l={},d=[{value:"Neo4jGraphQueryEngine",id:"neo4jgraphqueryengine",level:2},{value:"__init__",id:"__init__",level:3},{value:"init_db",id:"init_db",level:3},{value:"add_records",id:"add_records",level:3},{value:"query",id:"query",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"neo4jgraphqueryengine",children:"Neo4jGraphQueryEngine"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Neo4jGraphQueryEngine(GraphQueryEngine)\n"})}),"\n",(0,s.jsx)(n.p,{children:"This class serves as a wrapper for a Neo4j database-backed PropertyGraphIndex query engine,\nfacilitating the creation, updating, and querying of graphs."}),"\n",(0,s.jsx)(n.p,{children:"It builds a PropertyGraph Index from input documents,\nstoring and retrieving data from a property graph in the Neo4j database."}),"\n",(0,s.jsx)(n.p,{children:"Using SchemaLLMPathExtractor, it defines schemas with entities, relationships, and other properties based on the input,\nwhich are added into the preprty graph."}),"\n",(0,s.jsx)(n.p,{children:"For usage, please refer to example notebook/agentchat_graph_rag_neo4j.ipynb"}),"\n",(0,s.jsx)(n.h3,{id:"__init__",children:"__init__"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'def __init__(host: str = "bolt://localhost",\n             port: int = 7687,\n             database: str = "neo4j",\n             username: str = "neo4j",\n             password: str = "neo4j",\n             llm: LLM = OpenAI(model="gpt-4o", temperature=0.0),\n             embedding: BaseEmbedding = OpenAIEmbedding(\n                 model_name="text-embedding-3-small"),\n             entities: Optional[TypeAlias] = None,\n             relations: Optional[TypeAlias] = None,\n             validation_schema: Optional[Union[Dict[str, str],\n                                               List[Triple]]] = None,\n             strict: Optional[bool] = True)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Initialize a Neo4j Property graph.\nPlease also refer to ",(0,s.jsx)(n.a,{href:"https://docs.llamaindex.ai/en/stable/examples/property_graph/graph_store/",children:"https://docs.llamaindex.ai/en/stable/examples/property_graph/graph_store/"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"})," ",(0,s.jsx)(n.em,{children:"str"})," - Property graph name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"host"})," ",(0,s.jsx)(n.em,{children:"str"})," - Neo4j hostname."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"port"})," ",(0,s.jsx)(n.em,{children:"int"})," - Neo4j port number."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"database"})," ",(0,s.jsx)(n.em,{children:"str"})," - Neo4j database name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"username"})," ",(0,s.jsx)(n.em,{children:"str"})," - Neo4j username."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"password"})," ",(0,s.jsx)(n.em,{children:"str"})," - Neo4j password."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"llm"})," ",(0,s.jsx)(n.em,{children:"LLM"})," - Language model to use for extracting tripletss."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"embedding"})," ",(0,s.jsx)(n.em,{children:"BaseEmbedding"})," - Embedding model to use constructing index and query"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"entities"})," ",(0,s.jsx)(n.em,{children:"Optional[TypeAlias]"})," - Custom possible entities to include in the graph."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"relations"})," ",(0,s.jsx)(n.em,{children:"Optional[TypeAlias]"})," - Custom poissble relations to include in the graph."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"validation_schema"})," ",(0,s.jsx)(n.em,{children:"Optional[Union[Dict[str, str], List[Triple]]"})," - Custom schema to validate the extracted triplets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"strict"})," ",(0,s.jsx)(n.em,{children:"Optional[bool]"})," - If false, allows for values outside of the schema, useful for using the schema as a suggestion."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"init_db",children:"init_db"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def init_db(input_doc: List[Document] | None = None)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Build the knowledge graph with input documents."}),"\n",(0,s.jsx)(n.h3,{id:"add_records",children:"add_records"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def add_records(new_records: List) -> bool\n"})}),"\n",(0,s.jsx)(n.p,{children:"Add new records to the knowledge graph. Must be local files."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"new_records"})," ",(0,s.jsx)(n.em,{children:"List[Document]"})," - List of new documents to add."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"bool"})," - True if successful, False otherwise."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"query",children:"query"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def query(question: str,\n          n_results: int = 1,\n          **kwargs) -> GraphStoreQueryResult\n"})}),"\n",(0,s.jsx)(n.p,{children:"Query the knowledge graph with a question."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"question"})," - a human input question."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"n_results"})," - number of results to return."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,s.jsx)(n.p,{children:"A GrapStoreQueryResult object containing the answer and related triplets."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(96540);const i={},t=s.createContext(i);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);