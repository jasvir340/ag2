"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[74723],{60327:t=>{t.exports=JSON.parse('{"label":"tool/function","permalink":"/ag2/docs/tags/tool-function","allTagsPath":"/ag2/docs/tags","count":19,"items":[{"id":"notebooks/agentchat_agentoptimizer","title":"AgentOptimizer: An Agentic Way to Train Your LLM Agent","description":"AgentOptimizer is able to prompt LLMs to iteratively optimize function/skills of AutoGen agents according to the historical conversation and performance.","permalink":"/ag2/docs/notebooks/agentchat_agentoptimizer"},{"id":"notebooks/agentchat_planning","title":"Auto Generated Agent Chat: Collaborative Task Solving with Coding and Planning Agent","description":"Use planning agent in a function call.","permalink":"/ag2/docs/notebooks/agentchat_planning"},{"id":"notebooks/agentchat_two_users","title":"Auto Generated Agent Chat: Collaborative Task Solving with Multiple Agents and Human Users","description":"Involve multiple human users via function calls and nested chat.","permalink":"/ag2/docs/notebooks/agentchat_two_users"},{"id":"notebooks/agentchat_inception_function","title":"Auto Generated Agent Chat: Function Inception","description":"Function Inception: Enable AutoGen agents to update/remove functions during conversations.","permalink":"/ag2/docs/notebooks/agentchat_inception_function"},{"id":"notebooks/agentchat_langchain","title":"Auto Generated Agent Chat: Task Solving with Langchain Provided Tools as Functions","description":"Use Langchain tools.","permalink":"/ag2/docs/notebooks/agentchat_langchain"},{"id":"notebooks/agentchat_function_call","title":"Auto Generated Agent Chat: Task Solving with Provided Tools as Functions","description":"Register function calls using AssistantAgent and UserProxyAgent to execute python or shell code in customized ways. Demonstrating two ways of registering functions.","permalink":"/ag2/docs/notebooks/agentchat_function_call"},{"id":"notebooks/agentchat_oai_assistant_function_call","title":"Chat with OpenAI Assistant using function call in AutoGen: OSS Insights for Advanced GitHub Data Analysis","description":"This Jupyter Notebook demonstrates how to leverage OSS Insight (Open Source Software Insight) for advanced GitHub data analysis by defining `Function calls` in AutoGen for the OpenAI Assistant.","permalink":"/ag2/docs/notebooks/agentchat_oai_assistant_function_call"},{"id":"notebooks/agentchat_nested_chats_chess_altmodels","title":"Conversational Chess using non-OpenAI clients","description":"LLM-backed agents playing chess with each other using nested chats.","permalink":"/ag2/docs/notebooks/agentchat_nested_chats_chess_altmodels"},{"id":"notebooks/agentchat_function_call_currency_calculator","title":"Currency Calculator: Task Solving with Provided Tools as Functions","description":"Learn how to register function calls using AssistantAgent and UserProxyAgent.","permalink":"/ag2/docs/notebooks/agentchat_function_call_currency_calculator"},{"id":"notebooks/gpt_assistant_agent_function_call","title":"From Dad Jokes To Sad Jokes: Function Calling with GPTAssistantAgent","description":"Use tools in a GPTAssistantAgent Multi-Agent System by utilizing functions such as calling an API and writing to a file.","permalink":"/ag2/docs/notebooks/gpt_assistant_agent_function_call"},{"id":"notebooks/agentchat_nested_chats_chess","title":"Nested Chats for Tool Use in Conversational Chess","description":"LLM-backed agents playing chess with each other using nested chats.","permalink":"/ag2/docs/notebooks/agentchat_nested_chats_chess"},{"id":"notebooks/agentchat_sql_spider","title":"SQL Agent for Spider text-to-SQL benchmark","description":"Natural language text to SQL query using the Spider text-to-SQL benchmark.","permalink":"/ag2/docs/notebooks/agentchat_sql_spider"},{"id":"notebooks/agentchat_function_call_async","title":"Task Solving with Provided Tools as Functions (Asynchronous Function Calls)","description":"Learn how to implement both synchronous and asynchronous function calls using AssistantAgent and UserProxyAgent in AutoGen, with examples of their application in individual and group chat settings for task execution with language models.","permalink":"/ag2/docs/notebooks/agentchat_function_call_async"},{"id":"notebooks/agentchat_video_transcript_translate_with_whisper","title":"Translating Video audio using Whisper and GPT-3.5-turbo","description":"Use tools to extract and translate the transcript of a video file.","permalink":"/ag2/docs/notebooks/agentchat_video_transcript_translate_with_whisper"},{"id":"notebooks/agentchat_swarm_graphrag_trip_planner","title":"Trip planning with a FalkorDB GraphRAG agent using a Swarm","description":"FalkorDB GraphRAG utilises a knowledge graph and can be added as a capability to agents. Together with a swarm orchestration of agents is highly effective at providing a RAG capability.","permalink":"/ag2/docs/notebooks/agentchat_swarm_graphrag_trip_planner"},{"id":"notebooks/agentchat_swarm_graphrag_telemetry_trip_planner","title":"Using a local Telemetry server to monitor a GraphRAG agent","description":"FalkorDB GraphRAG utilises a knowledge graph and can be added as a capability to agents. Together with a swarm orchestration of agents is highly effective at providing a RAG capability.","permalink":"/ag2/docs/notebooks/agentchat_swarm_graphrag_telemetry_trip_planner"},{"id":"notebooks/agentchat_webscraping_with_apify","title":"Web Scraping using Apify Tools","description":"Scrapping web pages and summarizing the content using agents with tools.","permalink":"/ag2/docs/notebooks/agentchat_webscraping_with_apify"},{"id":"notebooks/agentchat_surfer","title":"WebSurferAgent","description":"Browse the web with agents.","permalink":"/ag2/docs/notebooks/agentchat_surfer"},{"id":"notebooks/agentchat_function_call_code_writing","title":"Writing a software application using function calls","description":"Equip your agent with functions that can efficiently implement features into your software application.","permalink":"/ag2/docs/notebooks/agentchat_function_call_code_writing"}],"unlisted":false}')}}]);