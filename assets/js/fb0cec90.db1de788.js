"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[99727],{3075:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=t(74848),o=t(28453);const i={custom_edit_url:"https://github.com/ag2ai/ag2/edit/main/notebook/agentchat_graph_rag_neo4j.ipynb",description:"Neo4j GraphRAG utilises a knowledge graph and can be added as a capability to agents.",source_notebook:"/notebook/agentchat_graph_rag_neo4j.ipynb",tags:["RAG"],title:"Using Neo4j's graph database with AG2 agents for Question & Answering"},r="Using Neo4j's graph database with AG2 agents for Question & Answering",s={id:"notebooks/agentchat_graph_rag_neo4j",title:"Using Neo4j's graph database with AG2 agents for Question & Answering",description:"Neo4j GraphRAG utilises a knowledge graph and can be added as a capability to agents.",source:"@site/docs/notebooks/agentchat_graph_rag_neo4j.mdx",sourceDirName:"notebooks",slug:"/notebooks/agentchat_graph_rag_neo4j",permalink:"/ag2/docs/notebooks/agentchat_graph_rag_neo4j",draft:!1,unlisted:!1,editUrl:"https://github.com/ag2ai/ag2/edit/main/notebook/agentchat_graph_rag_neo4j.ipynb",tags:[{label:"RAG",permalink:"/ag2/docs/tags/rag"}],version:"current",frontMatter:{custom_edit_url:"https://github.com/ag2ai/ag2/edit/main/notebook/agentchat_graph_rag_neo4j.ipynb",description:"Neo4j GraphRAG utilises a knowledge graph and can be added as a capability to agents.",source_notebook:"/notebook/agentchat_graph_rag_neo4j.ipynb",tags:["RAG"],title:"Using Neo4j's graph database with AG2 agents for Question & Answering"},sidebar:"notebooksSidebar",previous:{title:"Currency Calculator: Task Solving with Provided Tools as Functions",permalink:"/ag2/docs/notebooks/agentchat_function_call_currency_calculator"},next:{title:"Groupchat with Llamaindex agents",permalink:"/ag2/docs/notebooks/agentchat_group_chat_with_llamaindex_agents"}},l={},c=[{value:"Set Configuration and OpenAI API Key",id:"set-configuration-and-openai-api-key",level:2},{value:"Key Information: Using Neo4j with LLM Models \ud83d\ude80",id:"key-information-using-neo4j-with-llm-models",level:2},{value:"Create a Knowledge Graph with Your Own Data",id:"create-a-knowledge-graph-with-your-own-data",level:2},{value:"A Simple Example",id:"a-simple-example",level:3},{value:"Schema",id:"schema",level:3},{value:"Create the query engine and load the document",id:"create-the-query-engine-and-load-the-document",level:3},{value:"Create Neo4j-based RAG agents",id:"create-neo4j-based-rag-agents",level:3},{value:"Incrementally add new documents to the existing knoweldge graph!",id:"incrementally-add-new-documents-to-the-existing-knoweldge-graph",level:3},{value:"Now let\u2019s create a new GraphRag agent and some questions related to both documents",id:"now-lets-create-a-new-graphrag-agent-and-some-questions-related-to-both-documents",level:3}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"using-neo4js-graph-database-with-ag2-agents-for-question--answering",children:"Using Neo4j's graph database with AG2 agents for Question & Answering"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://colab.research.google.com/github/ag2ai/ag2/blob/main/notebook/agentchat_graph_rag_neo4j.ipynb",children:(0,a.jsx)(n.img,{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})}),"\n",(0,a.jsx)(n.a,{href:"https://github.com/ag2ai/ag2/blob/main/notebook/agentchat_graph_rag_neo4j.ipynb",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/badge/Open%20on%20GitHub-grey?logo=github",alt:"Open on GitHub"})})]}),"\n",(0,a.jsx)(n.p,{children:"AG2 provides GraphRAG integration through agent capabilities. This is an\nexample utilising the integration of Neo4j\u2019s property graph database\nwith LlamaIndex\u2019s graph query engine."}),"\n",(0,a.jsxs)(n.admonition,{title:"Requirements",type:"info",children:[(0,a.jsx)(n.p,{children:"To install the LlamaIndex, Neo4j, and document processing dependencies, install with the 'neo4j' extra:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pip install ag2[neo4j]\n"})}),(0,a.jsx)(n.h2,{id:"set-configuration-and-openai-api-key",children:"Set Configuration and OpenAI API Key"}),(0,a.jsxs)(n.p,{children:["By default, in order to use LlamaIndex with Neo4j you need to have an OpenAI key in your environment variable ",(0,a.jsx)(n.code,{children:"OPENAI_API_KEY"}),"."]}),(0,a.jsx)(n.p,{children:"You can utilise an OAI_CONFIG_LIST file and extract the OpenAI API key and put it in the environment, as will be shown in the following cell."}),(0,a.jsx)(n.p,{children:"Alternatively, you can load the environment variable yourself."}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-{=mdx}",children:":::tip\nLearn more about configuring LLMs for agents [here](/docs/topics/llm_configuration).\n"})})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import os\n\nimport autogen\n\nconfig_list = autogen.config_list_from_json(env_or_file="OAI_CONFIG_LIST")\n\n# Put the OpenAI API key into the environment\nos.environ["OPENAI_API_KEY"] = config_list[0]["api_key"]\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# This is needed to allow nested asyncio calls for Neo4j in Jupyter\nimport nest_asyncio\n\nnest_asyncio.apply()\n"})}),"\n",(0,a.jsx)(n.h2,{id:"key-information-using-neo4j-with-llm-models",children:"Key Information: Using Neo4j with LLM Models \ud83d\ude80"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Important"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Default Models"}),": - ",(0,a.jsx)(n.strong,{children:"Question Answering"}),": OpenAI\u2019s ",(0,a.jsx)(n.code,{children:"GPT-4o"})," with\n",(0,a.jsx)(n.code,{children:"temperature=0.0"}),". - ",(0,a.jsx)(n.strong,{children:"Embedding"}),": OpenAI\u2019s ",(0,a.jsx)(n.code,{children:"text-embedding-3-small"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Customization"}),": You can change these defaults by setting the\nfollowing parameters on the ",(0,a.jsx)(n.code,{children:"Neo4jGraphQueryEngine"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"llm"}),": Specify a LLM instance with a llm you like."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"embedding"}),": Specify a BaseEmbedding instance with a embedding\nmodel."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Reference"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://docs.llamaindex.ai/en/stable/module_guides/models/llms/",children:"https://docs.llamaindex.ai/en/stable/module_guides/models/llms/"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://docs.llamaindex.ai/en/stable/examples/property_graph/graph_store/",children:"https://docs.llamaindex.ai/en/stable/examples/property_graph/graph_store/"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"create-a-knowledge-graph-with-your-own-data",children:"Create a Knowledge Graph with Your Own Data"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Note:"})," You need to have a Neo4j database running. If you are running\none in a Docker container, please ensure your Docker network is setup to\nallow access to it."]}),"\n",(0,a.jsxs)(n.p,{children:["In this example, the Neo4j endpoint is set to host=\u201cbolt://172.17.0.3\u201d\nand port=7687, please adjust accordingly. For how to spin up a Neo4j\nwith Docker, you can refer to\n",(0,a.jsx)(n.a,{href:"https://docs.llamaindex.ai/en/stable/examples/property_graph/property_graph_neo4j/#:~:text=stores%2Dneo4j-,Docker%20Setup,%C2%B6,-To%20launch%20Neo4j",children:"this"})]}),"\n",(0,a.jsx)(n.p,{children:"We initialise the database with a Word document, creating the Property\ngraph in Neo4j."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# IMPORTS\nfrom llama_index.embeddings.openai import OpenAIEmbedding\nfrom llama_index.llms.openai import OpenAI\n\nfrom autogen import ConversableAgent, UserProxyAgent\nfrom autogen.agentchat.contrib.graph_rag.neo4j_graph_query_engine import Neo4jGraphQueryEngine\n"})}),"\n",(0,a.jsx)(n.h3,{id:"a-simple-example",children:"A Simple Example"}),"\n",(0,a.jsx)(n.p,{children:"In this example, the graph schema is auto-generated. This allows you to\nload data without specifying the specific types of entities and\nrelationships that will make up the database. However, it will only use\nsome default simple relationships including \u201cWORKED_ON\u201d, \u201cMENTIONS\u201d,\n\u201cLOCATED_IN\u201d"}),"\n",(0,a.jsxs)(n.p,{children:["LlamaIndex supports a lot of extensions including docx, text, pdf, csv,\netc. Find more details in Neo4jGraphQueryEngine. You may need to install\ndependencies for each extension. In this example, we need\n",(0,a.jsx)(n.code,{children:"pip install docx2txt"})]}),"\n",(0,a.jsx)(n.p,{children:"We start by creating a Neo4j property graph (knowledge graph) with a\nsample employee handbook of a finctional company called BUZZ"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# load documents\nfrom autogen.agentchat.contrib.graph_rag.document import Document, DocumentType\n\ninput_path = "../test/agentchat/contrib/graph_rag/BUZZ_Employee_Handbook.docx"\ninput_documents = [Document(doctype=DocumentType.TEXT, path_or_url=input_path)]\n'})}),"\n",(0,a.jsx)(n.p,{children:"An example property graph:"}),"\n",(0,a.jsxs)("figure",{children:[(0,a.jsx)("img",{src:"agentchat_graph_rag_neo4j_files/figure-markdown_strict/cell-10-1-neo4j_property_graph_1.png",alt:"neo4j_property_graph_1.png"}),(0,a.jsx)("figcaption",{"aria-hidden":"true",children:"neo4j_property_graph_1.png"})]}),"\n",(0,a.jsx)(n.h3,{id:"schema",children:"Schema"}),"\n",(0,a.jsx)(n.p,{children:"Define our custom entities, relations and schema"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from typing import Literal\n\n# best practice to use upper-case\nentities = Literal["EMPLOYEE", "EMPLOYER", "POLICY", "BENEFIT", "POSITION", "DEPARTMENT", "CONTRACT", "RESPONSIBILITY"]\nrelations = Literal[\n    "FOLLOWS",\n    "PROVIDES",\n    "APPLIES_TO",\n    "DEFINED_AS",\n    "ASSIGNED_TO",\n    "PART_OF",\n    "MANAGES",\n    "REQUIRES",\n    "ENTITLED_TO",\n    "REPORTS_TO",\n]\n\n# define which entities can have which relations\nvalidation_schema = {\n    "EMPLOYEE": ["FOLLOWS", "APPLIES_TO", "ASSIGNED_TO", "ENTITLED_TO", "REPORTS_TO"],\n    "EMPLOYER": ["PROVIDES", "DEFINED_AS", "MANAGES", "REQUIRES"],\n    "POLICY": ["APPLIES_TO", "DEFINED_AS", "REQUIRES"],\n    "BENEFIT": ["PROVIDES", "ENTITLED_TO"],\n    "POSITION": ["DEFINED_AS", "PART_OF", "ASSIGNED_TO"],\n    "DEPARTMENT": ["PART_OF", "MANAGES", "REQUIRES"],\n    "CONTRACT": ["PROVIDES", "REQUIRES", "APPLIES_TO"],\n    "RESPONSIBILITY": ["ASSIGNED_TO", "REQUIRES", "DEFINED_AS"],\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"create-the-query-engine-and-load-the-document",children:"Create the query engine and load the document"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# Create Neo4jGraphQueryEngine\nquery_engine = Neo4jGraphQueryEngine(\n    username="neo4j",  # Change these as needed\n    password="neo4jneo4j",\n    host="bolt://192.168.0.115",\n    port=7687,\n    database="neo4j",\n    llm=OpenAI(model="gpt-4o", temperature=0.0),\n    embedding=OpenAIEmbedding(model_name="text-embedding-3-small"),\n    entities=entities,  # possible entities\n    relations=relations,  # possible relations\n    validation_schema=validation_schema,  # schema to validate the extracted triplets\n    strict=True,  # enforce the extracted triplets to be in the schema\n)\n\n# Ingest data and initialize the database\nquery_engine.init_db(input_doc=input_documents)\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"/home/mark/miniconda3/envs/ag2neo4j/lib/python3.13/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from .autonotebook import tqdm as notebook_tqdm\nParsing nodes: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00, 321.70it/s]\nExtracting paths from text with schema: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3/3 [00:29<00:00,  9.92s/it]\nGenerating embeddings: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00,  1.41it/s]\nGenerating embeddings: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:01<00:00,  1.19s/it]\n"})}),"\n",(0,a.jsx)(n.p,{children:"The Property graph screenshot is shown below:"}),"\n",(0,a.jsxs)("figure",{children:[(0,a.jsx)("img",{src:"agentchat_graph_rag_neo4j_files/figure-markdown_strict/cell-15-1-neo4j_property_graph_2.png",alt:"neo4j_property_graph_2.png"}),(0,a.jsx)("figcaption",{"aria-hidden":"true",children:"neo4j_property_graph_2.png"})]}),"\n",(0,a.jsx)(n.h3,{id:"create-neo4j-based-rag-agents",children:"Create Neo4j-based RAG agents"}),"\n",(0,a.jsx)(n.p,{children:"With the schema defined and data loaded, we can now create a capable\nagent!"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from autogen.agentchat.contrib.graph_rag.neo4j_graph_rag_capability import Neo4jGraphCapability\n\n# Create a ConversableAgent (no LLM configuration)\ngraph_rag_agent = ConversableAgent(\n    name="rag_agent",\n    human_input_mode="NEVER",\n)\n\n# Associate the capability with the agent\ngraph_rag_capability = Neo4jGraphCapability(query_engine)\ngraph_rag_capability.add_to_agent(graph_rag_agent)\n\n# Create a user proxy agent to converse with our RAG agent\nuser_proxy = UserProxyAgent(name="user_proxy", human_input_mode="ALWAYS", code_execution_config=False)\n\nuser_proxy.initiate_chat(graph_rag_agent, message="Which company is the employer?")\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"user_proxy (to rag_agent):\n\nWhich company is the employer?\n\n--------------------------------------------------------------------------------\nrag_agent (to user_proxy):\n\nBUZZ Co.\n\n--------------------------------------------------------------------------------\nuser_proxy (to rag_agent):\n\nTell me about sick leave\n\n--------------------------------------------------------------------------------\nrag_agent (to user_proxy):\n\nEmployees at BUZZ Co. are entitled to one day of sick leave per month for full-time employees, which is prorated for part-time employees, with a maximum accumulation of up to 30 days.\n\n--------------------------------------------------------------------------------\nuser_proxy (to rag_agent):\n\nAnd vacation?\n\n--------------------------------------------------------------------------------\nrag_agent (to user_proxy):\n\nFull-time employees at BUZZ Co. earn 10 days of vacation after the first year, 15 days after the third year, and 20 days after the fourth year. Part-time employees' vacation days are prorated based on their hours worked.\n\n--------------------------------------------------------------------------------\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"ChatResult(chat_id=None, chat_history=[{'content': 'Which company is the employer?', 'role': 'assistant', 'name': 'user_proxy'}, {'content': 'BUZZ Co.', 'role': 'user', 'name': 'rag_agent'}, {'content': 'Tell me about sick leave', 'role': 'assistant', 'name': 'user_proxy'}, {'content': 'Employees at BUZZ Co. are entitled to one day of sick leave per month for full-time employees, which is prorated for part-time employees, with a maximum accumulation of up to 30 days.', 'role': 'user', 'name': 'rag_agent'}, {'content': 'And vacation?', 'role': 'assistant', 'name': 'user_proxy'}, {'content': \"Full-time employees at BUZZ Co. earn 10 days of vacation after the first year, 15 days after the third year, and 20 days after the fourth year. Part-time employees' vacation days are prorated based on their hours worked.\", 'role': 'user', 'name': 'rag_agent'}], summary=\"Full-time employees at BUZZ Co. earn 10 days of vacation after the first year, 15 days after the third year, and 20 days after the fourth year. Part-time employees' vacation days are prorated based on their hours worked.\", cost={'usage_including_cached_inference': {'total_cost': 0}, 'usage_excluding_cached_inference': {'total_cost': 0}}, human_input=['Tell me about sick leave', 'And vacation?', 'exit'])\n"})}),"\n",(0,a.jsx)(n.h3,{id:"incrementally-add-new-documents-to-the-existing-knoweldge-graph",children:"Incrementally add new documents to the existing knoweldge graph!"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'input_path = "../test/agentchat/contrib/graph_rag/BUZZ_Equal-Employment-Opportunity-Policy-Detailed.docx"\ninput_documents = [Document(doctype=DocumentType.TEXT, path_or_url=input_path)]\n\n_ = query_engine.add_records(input_documents)\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"Parsing nodes: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00, 545.99it/s]\nExtracting paths from text with schema: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:30<00:00, 30.24s/it]\nGenerating embeddings: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00,  2.61it/s]\nGenerating embeddings: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:01<00:00,  1.20s/it]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Checking the property graph, we\u2019ll find a new policy (entity) called\nEqual Employment Opportunity Policy is added"}),"\n",(0,a.jsxs)("figure",{children:[(0,a.jsx)("img",{src:"agentchat_graph_rag_neo4j_files/figure-markdown_strict/cell-20-1-neo4j_property_graph_3.png",alt:"neo4j_property_graph_3.png"}),(0,a.jsx)("figcaption",{"aria-hidden":"true",children:"neo4j_property_graph_3.png"})]}),"\n",(0,a.jsx)(n.h3,{id:"now-lets-create-a-new-graphrag-agent-and-some-questions-related-to-both-documents",children:"Now let\u2019s create a new GraphRag agent and some questions related to both documents"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from autogen.agentchat.contrib.graph_rag.neo4j_graph_rag_capability import Neo4jGraphCapability\n\n# Ask questions about both documents\nuser_proxy.initiate_chat(graph_rag_agent, message="What is Equal Employment Opportunity Policy at BUZZ?")\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"user_proxy (to rag_agent):\n\nWhat is Equal Employment Opportunity Policy at BUZZ?\n\n--------------------------------------------------------------------------------\nrag_agent (to user_proxy):\n\nThe Equal Employment Opportunity Policy at BUZZ Co. ensures non-discrimination and equal employment opportunities for all employees and applicants. It prohibits discrimination or harassment based on various factors and covers aspects such as recruitment, promotion, training, working conditions, wages, and benefits. The policy is disseminated by BUZZ Co. officers, implemented by directors, managers, and supervisors, and enforced by the Human Resources department to ensure company-wide compliance with anti-discrimination laws and regulations.\n\n--------------------------------------------------------------------------------\nuser_proxy (to rag_agent):\n\nWhat's the scope of the Equal Employment Opportunity and Anti-Discrimination Policy?\n\n--------------------------------------------------------------------------------\nrag_agent (to user_proxy):\n\nThe scope of the Equal Employment Opportunity and Anti-Discrimination Policy includes all aspects of the employment relationship at BUZZ Co., such as recruitment, employment, promotion, transfer, training, working conditions, wages and salary administration, and employee benefits. This policy also extends to the selection and treatment of independent contractors, temporary agency personnel working on BUZZ Co. premises, and any other individuals or firms conducting business for or with BUZZ Co.\n\n--------------------------------------------------------------------------------\nuser_proxy (to rag_agent):\n\nIs Promotion part of the scope of the Equal Employment Opportunity and Anti-Discrimination Policy?\n\n--------------------------------------------------------------------------------\nrag_agent (to user_proxy):\n\nYes.\n\n--------------------------------------------------------------------------------\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"ChatResult(chat_id=None, chat_history=[{'content': 'What is Equal Employment Opportunity Policy at BUZZ?', 'role': 'assistant', 'name': 'user_proxy'}, {'content': 'The Equal Employment Opportunity Policy at BUZZ Co. ensures non-discrimination and equal employment opportunities for all employees and applicants. It prohibits discrimination or harassment based on various factors and covers aspects such as recruitment, promotion, training, working conditions, wages, and benefits. The policy is disseminated by BUZZ Co. officers, implemented by directors, managers, and supervisors, and enforced by the Human Resources department to ensure company-wide compliance with anti-discrimination laws and regulations.', 'role': 'user', 'name': 'rag_agent'}, {'content': \"What's the scope of the Equal Employment Opportunity and Anti-Discrimination Policy?\", 'role': 'assistant', 'name': 'user_proxy'}, {'content': 'The scope of the Equal Employment Opportunity and Anti-Discrimination Policy includes all aspects of the employment relationship at BUZZ Co., such as recruitment, employment, promotion, transfer, training, working conditions, wages and salary administration, and employee benefits. This policy also extends to the selection and treatment of independent contractors, temporary agency personnel working on BUZZ Co. premises, and any other individuals or firms conducting business for or with BUZZ Co.', 'role': 'user', 'name': 'rag_agent'}, {'content': 'Is Promotion part of the scope of the Equal Employment Opportunity and Anti-Discrimination Policy?', 'role': 'assistant', 'name': 'user_proxy'}, {'content': 'Yes.', 'role': 'user', 'name': 'rag_agent'}], summary='Yes.', cost={'usage_including_cached_inference': {'total_cost': 0}, 'usage_excluding_cached_inference': {'total_cost': 0}}, human_input=[\"What's the scope of the Equal Employment Opportunity and Anti-Discrimination Policy?\", 'Is Promotion part of the scope of the Equal Employment Opportunity and Anti-Discrimination Policy?', 'exit'])\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var a=t(96540);const o={},i=a.createContext(o);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);